From c80b588cc3e11a80ffedd778fab3f19c686552f7 Mon Sep 17 00:00:00 2001
From: Samuli Piippo <samuli.piippo@qt.io>
Date: Mon, 5 Aug 2019 14:24:44 +0300
Subject: [PATCH] Fix format-security issues

format not a string literal and no format arguments [-Wformat-security]

Change-Id: I04c1d1598948b664b9d85036030c6f89fcf3c8b7
---
 src/render/backends/gl/Q3DSRenderBackendGLES2.cpp   | 4 ++--
 src/render/backends/gl/Qt3DSRenderBackendGLBase.cpp | 8 ++++----
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/src/render/backends/gl/Q3DSRenderBackendGLES2.cpp b/src/render/backends/gl/Q3DSRenderBackendGLES2.cpp
index ac5b992..02046ac 100644
--- a/src/render/backends/gl/Q3DSRenderBackendGLES2.cpp
+++ b/src/render/backends/gl/Q3DSRenderBackendGLES2.cpp
@@ -663,7 +663,7 @@ NVRenderBackendGLES2Impl::CreateRenderbuffer(NVRenderRenderBufferFormats::Enum s
     // check for error
     GLenum error = m_glFunctions->glGetError();
     if (error != GL_NO_ERROR) {
-        qCCritical(GL_ERROR, GLConversion::processGLError(error));
+        qCCritical(GL_ERROR) << GLConversion::processGLError(error);
         QT3DS_ASSERT(false);
         GL_CALL_EXTRA_FUNCTION(glDeleteRenderbuffers(1, &bufID));
         bufID = 0;
@@ -699,7 +699,7 @@ bool NVRenderBackendGLES2Impl::ResizeRenderbuffer(NVRenderBackendRenderbufferObj
     // check for error
     GLenum error = m_glFunctions->glGetError();
     if (error != GL_NO_ERROR) {
-        qCCritical(GL_ERROR, GLConversion::processGLError(error));
+        qCCritical(GL_ERROR) << GLConversion::processGLError(error);
         QT3DS_ASSERT(false);
         success = false;
     }
diff --git a/src/render/backends/gl/Qt3DSRenderBackendGLBase.cpp b/src/render/backends/gl/Qt3DSRenderBackendGLBase.cpp
index 0fe6e0f..5dfe9d1 100644
--- a/src/render/backends/gl/Qt3DSRenderBackendGLBase.cpp
+++ b/src/render/backends/gl/Qt3DSRenderBackendGLBase.cpp
@@ -604,7 +604,7 @@ NVRenderBackendGLBase::CreateBuffer(size_t size, NVRenderBufferBindFlags bindFla
         } else {
             GL_CALL_FUNCTION(glDeleteBuffers(1, &bufID));
             bufID = 0;
-            qCCritical(GL_ERROR, GLConversion::processGLError(target));
+            qCCritical(GL_ERROR) << GLConversion::processGLError(target);
         }
     }
 
@@ -832,7 +832,7 @@ NVRenderBackendGLBase::CreateRenderbuffer(NVRenderRenderBufferFormats::Enum stor
     // check for error
     GLenum error = m_glFunctions->glGetError();
     if (error != GL_NO_ERROR) {
-        qCCritical(GL_ERROR, GLConversion::processGLError(error));
+        qCCritical(GL_ERROR) << GLConversion::processGLError(error);
         QT3DS_ASSERT(false);
         GL_CALL_FUNCTION(glDeleteRenderbuffers(1, &bufID));
         bufID = 0;
@@ -869,7 +869,7 @@ bool NVRenderBackendGLBase::ResizeRenderbuffer(NVRenderBackendRenderbufferObject
     // check for error
     GLenum error = m_glFunctions->glGetError();
     if (error != GL_NO_ERROR) {
-        qCCritical(GL_ERROR, GLConversion::processGLError(error));
+        qCCritical(GL_ERROR) << GLConversion::processGLError(error);
         QT3DS_ASSERT(false);
         success = false;
     }
@@ -1306,7 +1306,7 @@ bool NVRenderBackendGLBase::compileSource(GLuint shaderID, NVConstDataRef<QT3DSI
         GLenum binaryError = m_glFunctions->glGetError();
         if (binaryError != GL_NO_ERROR) {
             shaderStatus = GL_FALSE;
-            qCCritical(GL_ERROR, GLConversion::processGLError(binaryError));
+            qCCritical(GL_ERROR) << GLConversion::processGLError(binaryError);
         }
     }
 
